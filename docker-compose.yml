version: '3.8'

services:
  backend:
    build:
      context: ./blog-backend
      dockerfile: Dockerfile
    container_name: blog-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./blog-backend:/var/www/html
    depends_on:
      - mysql
    networks:
      - blog-network

  frontend:
    build:
      context: ./blog-frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./blog-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - blog-network

  mysql:
    image: mysql:8.0
    container_name: blog-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: blog
      MYSQL_ROOT_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - blog-mysql-data:/var/lib/mysql
    networks:
      - blog-network

  nginx:
    image: nginx:alpine
    container_name: blog-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./blog-backend/public:/var/www/html
    depends_on:
      - backend
      - frontend
    networks:
      - blog-network

volumes:
  blog-mysql-data:

networks:
  blog-network:
    driver: bridge